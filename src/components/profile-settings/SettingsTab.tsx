import { Button } from '@/components/ui/button';
import { Label } from '@/components/ui/label';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Switch } from '@/components/ui/switch';
import { useToast } from '@/hooks/use-toast';

interface UserPreferences {
  theme: 'light' | 'dark' | 'colorful';
  language: 'ru' | 'en';
  notifications: {
    email: boolean;
    push: boolean;
    marketing: boolean;
  };
  privacy: {
    showEmail: boolean;
    showPhone: boolean;
    showLastActivity: boolean;
  };
  dashboard: {
    compactView: boolean;
    showStats: boolean;
    defaultView: 'grid' | 'list';
  };
}

interface SettingsTabProps {
  preferences: UserPreferences;
  setPreferences: (preferences: UserPreferences) => void;
}

const SettingsTab: React.FC<SettingsTabProps> = ({ preferences, setPreferences }) => {
  const { toast } = useToast();

  const saveSettings = () => {
    toast({
      title: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã",
      description: "–í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã"
    });
  };

  return (
    <div className="space-y-6">
      <div>
        <Label>–¢–µ–º–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞</Label>
        <Select 
          value={preferences.theme} 
          onValueChange={(value: 'light' | 'dark' | 'colorful') => 
            setPreferences({...preferences, theme: value})
          }
        >
          <SelectTrigger>
            <SelectValue />
          </SelectTrigger>
          <SelectContent>
            <SelectItem value="light">üåû –°–≤–µ—Ç–ª–∞—è</SelectItem>
            <SelectItem value="dark">üåô –¢–µ–º–Ω–∞—è</SelectItem>
            <SelectItem value="rainbow">üåà –†–∞–¥—É–∂–Ω–∞—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)</SelectItem>
          </SelectContent>
        </Select>
      </div>

      <div>
        <Label>–Ø–∑—ã–∫</Label>
        <Select 
          value={preferences.language} 
          onValueChange={(value: 'ru' | 'en') => 
            setPreferences({...preferences, language: value})
          }
        >
          <SelectTrigger>
            <SelectValue />
          </SelectTrigger>
          <SelectContent>
            <SelectItem value="ru">üá∑üá∫ –†—É—Å—Å–∫–∏–π</SelectItem>
            <SelectItem value="en">üá∫üá∏ English</SelectItem>
          </SelectContent>
        </Select>
      </div>

      <div>
        <Label>–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</Label>
        <div className="space-y-3 mt-2">
          <div className="flex items-center justify-between">
            <span>–ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –≤–∏–¥</span>
            <Switch
              checked={preferences.dashboard.compactView}
              onCheckedChange={(checked) => 
                setPreferences({
                  ...preferences, 
                  dashboard: {...preferences.dashboard, compactView: checked}
                })
              }
            />
          </div>
          <div className="flex items-center justify-between">
            <span>–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É</span>
            <Switch
              checked={preferences.dashboard.showStats}
              onCheckedChange={(checked) => 
                setPreferences({
                  ...preferences, 
                  dashboard: {...preferences.dashboard, showStats: checked}
                })
              }
            />
          </div>
        </div>
      </div>

      <div>
        <Label>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</Label>
        <div className="space-y-3 mt-2">
          <div className="flex items-center justify-between">
            <span>Email —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</span>
            <Switch
              checked={preferences.notifications.email}
              onCheckedChange={(checked) => 
                setPreferences({
                  ...preferences, 
                  notifications: {...preferences.notifications, email: checked}
                })
              }
            />
          </div>
          <div className="flex items-center justify-between">
            <span>Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</span>
            <Switch
              checked={preferences.notifications.push}
              onCheckedChange={(checked) => 
                setPreferences({
                  ...preferences, 
                  notifications: {...preferences.notifications, push: checked}
                })
              }
            />
          </div>
          <div className="flex items-center justify-between">
            <span>–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ —Ä–∞—Å—Å—ã–ª–∫–∏</span>
            <Switch
              checked={preferences.notifications.marketing}
              onCheckedChange={(checked) => 
                setPreferences({
                  ...preferences, 
                  notifications: {...preferences.notifications, marketing: checked}
                })
              }
            />
          </div>
        </div>
      </div>

      <Button onClick={saveSettings} className="bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 text-white w-full">
        –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
      </Button>
    </div>
  );
};

export default SettingsTab;