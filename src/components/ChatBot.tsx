import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import Icon from '@/components/ui/icon';

interface Message {
  id: number;
  text: string;
  isBot: boolean;
  timestamp: Date;
}

export default function ChatBot() {
  const [isOpen, setIsOpen] = useState(false);
  const [messages, setMessages] = useState<Message[]>([
    {
      id: 1,
      text: '–ü—Ä–∏–≤–µ—Ç! ü§ñ –Ø –±–æ—Ç KINETIC KIDS! –ú–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –∫–ª—É–±–µ –∏–ª–∏ —Å–æ–µ–¥–∏–Ω–∏—Ç—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —á–µ—Ä–µ–∑ WhatsApp.',
      isBot: true,
      timestamp: new Date()
    }
  ]);
  const [inputText, setInputText] = useState('');

  const clubPhone = '+79999999999'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –∫–ª—É–±–∞

  const botResponses = {
    '–≤–æ–∑—Ä–∞—Å—Ç': '–û–±—É—á–∞–µ–º –¥–µ—Ç–µ–π —Å 3 –ª–µ—Ç, –∞ —Ç–∞–∫–∂–µ –≤–∑—Ä–æ—Å–ª—ã—Ö! –î–ª—è –º–∞–ª—ã—à–µ–π –æ—Ç 3-4 –ª–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –±–µ–≥–æ–≤–µ–ª, —Å 5 –ª–µ—Ç –º–æ–∂–Ω–æ –æ—Å–≤–∞–∏–≤–∞—Ç—å –≤—Å–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è.',
    '–∏–Ω–≤–µ–Ω—Ç–∞—Ä—å': '–°—Ç–æ–∏–º–æ—Å—Ç—å –≤—Å–µ—Ö –∞–±–æ–Ω–µ–º–µ–Ω—Ç–æ–≤ —É–∂–µ –≤–∫–ª—é—á–∞–µ—Ç –∞—Ä–µ–Ω–¥—É –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —Å–≤–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å, –∞–±–æ–Ω–µ–º–µ–Ω—Ç –±—É–¥–µ—Ç –¥–µ—à–µ–≤–ª–µ.',
    '–∑–∞–Ω—è—Ç–∏–µ': '–ó–∞–Ω—è—Ç–∏—è –º–æ–∂–Ω–æ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å –ø—Ä–∏ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∑–∞ 2 —á–∞—Å–∞ –¥–æ –Ω–∞—á–∞–ª–∞.',
    '—Å–∫–∏–¥–∫–∏': '–î–∞! –ï—Å–ª–∏ –≤ –¥–µ–Ω—å –ø—Ä–æ–±–Ω–æ–≥–æ –∑–∞–Ω—è—Ç–∏—è –≤—ã –ø–æ–∫—É–ø–∞–µ—Ç–µ –∞–±–æ–Ω–µ–º–µ–Ω—Ç, —Ç–æ –ø—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º.',
    '–≥—Ä—É–ø–ø–∞': '–í –≥—Ä—É–ø–ø–∞—Ö –Ω–µ –±–æ–ª–µ–µ 10 —á–µ–ª–æ–≤–µ–∫ –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.',
    '–∑–∞—â–∏—Ç–∞': '–ü–æ–ª–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Ç –∑–∞—â–∏—Ç—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –∫–ª—É–±–æ–º: —à–ª–µ–º, –Ω–∞–∫–æ–ª–µ–Ω–Ω–∏–∫–∏, –Ω–∞–ª–æ–∫–æ—Ç–Ω–∏–∫–∏, –ø–µ—Ä—á–∞—Ç–∫–∏. –ù—É–∂–Ω–∞ —Ç–æ–ª—å–∫–æ —É–¥–æ–±–Ω–∞—è —Å–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –æ–¥–µ–∂–¥–∞.',
    '–∞–¥—Ä–µ—Å': '–ú—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ –≥. –í–æ—Ä–æ–Ω–µ–∂. –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è –≤ –º–∞–µ 2026 –≥–æ–¥–∞.',
    '–∫–æ–Ω—Ç–∞–∫—Ç—ã': '–î–ª—è –∑–∞–ø–∏—Å–∏ –∏ –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ —á–µ—Ä–µ–∑ WhatsApp!',
    '–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è': '–£ –Ω–∞—Å –µ—Å—Ç—å: —Å–∫–µ–π—Ç–±–æ—Ä–¥–∏–Ω–≥, —Ä–æ–ª–∏–∫–∏, –≤–µ–ª–æ—Å–∏–ø–µ–¥, BMX, —Ç—Ä—é–∫–æ–≤–æ–π —Å–∞–º–æ–∫–∞—Ç –∏ –±–µ–≥–æ–≤–µ–ª –¥–ª—è –º–∞–ª—ã—à–µ–π.'
  };

  const handleSendMessage = () => {
    if (!inputText.trim()) return;

    const newMessage: Message = {
      id: messages.length + 1,
      text: inputText,
      isBot: false,
      timestamp: new Date()
    };

    setMessages(prev => [...prev, newMessage]);
    
    // –ü–æ–∏—Å–∫ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    const lowerText = inputText.toLowerCase();
    let botResponse = '';
    
    for (const [key, response] of Object.entries(botResponses)) {
      if (lowerText.includes(key)) {
        botResponse = response;
        break;
      }
    }

    if (!botResponse) {
      botResponse = '–ù–µ –Ω–∞—à–µ–ª –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å üòÖ –ù–∞–∂–º–∏—Ç–µ "–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º" –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏!';
    }

    setTimeout(() => {
      const botMessage: Message = {
        id: messages.length + 2,
        text: botResponse,
        isBot: true,
        timestamp: new Date()
      };
      setMessages(prev => [...prev, botMessage]);
    }, 1000);

    setInputText('');
  };

  const handleWhatsAppContact = () => {
    const message = '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –û–±—Ä–∞—â–∞—é—Å—å —Å —Å–∞–π—Ç–∞ KINETIC KIDS. –•–æ—Ç–µ–ª –±—ã –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é.';
    const whatsappUrl = `https://wa.me/${clubPhone.replace(/[^0-9]/g, '')}?text=${encodeURIComponent(message)}`;
    window.open(whatsappUrl, '_blank');
  };

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      handleSendMessage();
    }
  };

  return (
    <>
      {/* Floating Chat Button */}
      <div className={`fixed bottom-6 right-6 z-50 transition-all duration-300 ${isOpen ? 'scale-0' : 'scale-100'}`}>
        <button
          onClick={() => setIsOpen(true)}
          className="w-16 h-16 bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white rounded-full shadow-lg hover:shadow-xl transition-all duration-300 flex items-center justify-center group"
        >
          <img 
            src="https://cdn.poehali.dev/files/819f034c-b5eb-4287-b8ab-14036c8c696f.jpg" 
            alt="KINETIC KIDS Bot" 
            className="w-10 h-10 rounded-full object-cover group-hover:scale-110 transition-transform"
          />
        </button>
      </div>

      {/* Chat Window */}
      <div className={`fixed bottom-6 right-6 z-50 transition-all duration-300 ${isOpen ? 'scale-100' : 'scale-0'}`}>
        <Card className="w-80 h-96 shadow-2xl border-2 border-purple-200">
          <CardHeader className="bg-gradient-to-r from-purple-500 to-pink-500 text-white p-4 rounded-t-lg">
            <div className="flex items-center justify-between">
              <div className="flex items-center space-x-2">
                <img 
                  src="https://cdn.poehali.dev/files/819f034c-b5eb-4287-b8ab-14036c8c696f.jpg" 
                  alt="KINETIC KIDS Bot" 
                  className="w-8 h-8 rounded-full object-cover"
                />
                <CardTitle className="text-sm font-semibold">KINETIC BOT</CardTitle>
              </div>
              <button
                onClick={() => setIsOpen(false)}
                className="text-white hover:text-gray-200 transition-colors"
              >
                <Icon name="X" className="w-5 h-5" />
              </button>
            </div>
          </CardHeader>
          
          <CardContent className="p-0 h-64 flex flex-col">
            {/* Messages */}
            <div className="flex-1 overflow-y-auto p-4 space-y-3">
              {messages.map((message) => (
                <div
                  key={message.id}
                  className={`flex ${message.isBot ? 'justify-start' : 'justify-end'}`}
                >
                  <div
                    className={`max-w-xs px-3 py-2 rounded-lg text-sm ${
                      message.isBot
                        ? 'bg-gray-100 text-gray-800'
                        : 'bg-purple-500 text-white'
                    }`}
                  >
                    {message.text}
                  </div>
                </div>
              ))}
            </div>

            {/* WhatsApp Button */}
            <div className="p-3 border-t">
              <button
                onClick={handleWhatsAppContact}
                className="w-full bg-green-500 hover:bg-green-600 text-white px-3 py-2 rounded-lg text-sm font-medium transition-colors flex items-center justify-center space-x-2 mb-2"
              >
                <Icon name="MessageCircle" className="w-4 h-4" />
                <span>–°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º</span>
              </button>
            </div>

            {/* Input */}
            <div className="p-3 border-t bg-gray-50">
              <div className="flex space-x-2">
                <input
                  type="text"
                  value={inputText}
                  onChange={(e) => setInputText(e.target.value)}
                  onKeyPress={handleKeyPress}
                  placeholder="–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å..."
                  className="flex-1 px-3 py-2 border border-gray-300 rounded-lg text-sm focus:outline-none focus:ring-2 focus:ring-purple-500"
                />
                <button
                  onClick={handleSendMessage}
                  disabled={!inputText.trim()}
                  className="bg-purple-500 hover:bg-purple-600 disabled:bg-gray-300 text-white px-3 py-2 rounded-lg transition-colors"
                >
                  <Icon name="Send" className="w-4 h-4" />
                </button>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </>
  );
}